name: Changelog steps

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  reject_pr_job_main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: do-nothing
        run: echo "This job does nothing"
      - name: Run the action # You would run your tests before this using the output to set state/desc
        uses: Sibz/github-status-action@v1
        with: 
          authToken: ${{secrets.TOKEN_CHANGELOG}}
          context: 'Test run'
          description: 'Passed'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}


  run-on-merge:
    needs: reject_pr_job_main
    permissions: write-all
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: main
          token: ${{ secrets.TOKEN_CHANGELOG }}
      
      - name: run-bash-file
        run: |
          git fetch 
          chmod 777 script.sh
          repository_name="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY"
          should_add_last_changes_to_master=$(./script.sh $repository_name)
          echo $should_add_last_changes_to_master
          echo "should_add_last_changes_to_master=$should_add_last_changes_to_master" >> $GITHUB_ENV

      - name: commit-push-changes
        uses: actions-js/push@master
        if: ${{env.should_add_last_changes_to_master == 'true'}}
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: "Changelog version updated"
          tags: true
          force: true          

      - name: create tags
        if: ${{env.should_add_last_changes_to_master == 'true'}}
        run: |
          project_version=$(cat VERSION)
          tag_name="$project_version"
          release_message="Version $project_version"
          echo "tag_name=$tag_name" >> $GITHUB_ENV
          echo "release_message=$release_message" >> $GITHUB_ENV

      - name: create-push-tags
        if: ${{env.should_add_last_changes_to_master == 'true'}}
        id: "tag_create"
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.TOKEN_CHANGELOG }}
          tag: ${{env.tag_name}}
          tag_exists_error: false
          message: ${{env.release_message}}

      - name: create-develop-branch
        uses: morbalint/git-merge-action@v1
        with:
          target: "develop"
          source: "main"
          token: ${{ secrets.TOKEN_CHANGELOG }}
          strategy_options: "ours"
